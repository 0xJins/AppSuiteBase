<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:app="using:CarinaStudio.AppSuite"
		xmlns:appControls="using:CarinaStudio.AppSuite.Controls"
		xmlns:appConverters="using:CarinaStudio.AppSuite.Converters"
		xmlns:sys="using:System"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.AppSuite.Tests.MainWindow"
		Classes="Tabbed"
		Icon="/AppIcon.ico"
        Title="Main Window">
	
	<Window.Styles>
		<Style Selector="CaptionButtons">
			<Setter Property="MaxHeight" Value="{Binding $parent[Window].ExtendClientAreaTitleBarHeightHint}"/>
		</Style>
	</Window.Styles>

	<Window.ExtendClientAreaTitleBarHeightHint>
		<MultiBinding Converter="{x:Static appConverters:DoubleConverters.Add}">
			<Binding ElementName="tabControl" Path="TabStripSize"/>
			<Binding RelativeSource="{RelativeSource Mode=Self}" Path="ContentPadding.Top"/>
		</MultiBinding>
	</Window.ExtendClientAreaTitleBarHeightHint>

	<DockPanel>

		<Border Classes="StatusBar">
			<StackPanel Orientation="Horizontal">
				<TextBlock Classes="StatusBar_TextBlock" Text="{DynamicResource String/Common.OK}"/>
				<Separator Classes="StatusBar_Separator"/>
				<TextBlock Classes="StatusBar_TextBlock" Text="{DynamicResource String/Common.Cancel}"/>

				<Separator Classes="StatusBar_Separator"/>
				<Image Classes="StatusBar_Icon">
					<DrawingImage>
						<GeometryDrawing Brush="{DynamicResource Brush/StatusBar.Foreground}" Geometry="{DynamicResource Geometry/Icon.Folder}"/>
					</DrawingImage>
				</Image>
				<TextBlock Classes="StatusBar_TextBlock" Text="Test"/>

				<Separator Classes="StatusBar_Separator"/>
				<Button Classes="StatusBar_Button">Button</Button>
				<Button Classes="StatusBar_Button" IsEnabled="False">Button</Button>

				<Separator Classes="StatusBar_Separator"/>
				<ToggleButton Classes="StatusBar_ToggleButton">ToggleButton</ToggleButton>
				<ToggleButton Classes="StatusBar_ToggleButton" IsEnabled="False">ToggleButton</ToggleButton>
				<ToggleButton Classes="StatusBar_ToggleButton" IsChecked="True" IsEnabled="False">ToggleButton</ToggleButton>

				<Separator Classes="StatusBar_Separator"/>
				<RepeatButton Classes="StatusBar_RepeatButton">RepeatButton</RepeatButton>
				<RepeatButton Classes="StatusBar_RepeatButton" IsEnabled="False">RepeatButton</RepeatButton>
			</StackPanel>
		</Border>

		<appControls:TabControl Name="tabControl" DragDrop.AllowDrop="True" DragEnterItem="OnDragEnterTabItem" DragLeaveItem="OnDragLeaveTabItem" DragOverItem="OnDragOverTabItem" DropOnItem="OnDropOnTabItem" ItemDragged="OnTabItemDragged">

			<TabItem>

				<TabItem.Header>
					<Grid ColumnDefinitions="Auto,*,Auto" ToolTip.Tip="This is tooltip">
						<Image Classes="TabItem_Icon" IsEnabled="{Binding $parent[TabItem].IsSelected}" Source="{DynamicResource Image/Icon.File}"/>
						<TextBlock Classes="TabItem_TextBlock" Grid.Column="1" Text="Item 1 Item 1 Item 1 Item 1 kkkkkkkkkkkkkkkkk"/>
						<Button Classes="TabItem_Button" Command="{Binding $parent[Window].Test}" Grid.Column="2">
							<Image Classes="Icon" Source="{StaticResource Image/Icon.Folder}"/>
						</Button>
					</Grid>
				</TabItem.Header>

				<ScrollViewer HorizontalAlignment="Stretch">
					<StackPanel Background="{DynamicResource Brush/WorkingArea.Background}" HorizontalAlignment="Stretch" Orientation="Vertical">

						<StackPanel.ContextMenu>
							<ContextMenu>
								<MenuItem Command="{Binding $parent[Window].LayoutMainWindowsCommand}" CommandParameter="{x:Static appControls:MultiWindowLayout.Horizontal}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Horizontal}">
									<MenuItem.Icon>
										<Image Classes="Icon" Source="{DynamicResource Image/Icon.Layout.Horizontal}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Command="{Binding $parent[Window].LayoutMainWindowsCommand}" CommandParameter="{x:Static appControls:MultiWindowLayout.Vertical}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Vertical}">
									<MenuItem.Icon>
										<Image Classes="Icon" Source="{DynamicResource Image/Icon.Layout.Vertical}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Command="{Binding $parent[Window].LayoutMainWindowsCommand}" CommandParameter="{x:Static appControls:MultiWindowLayout.Tile}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Tile}">
									<MenuItem.Icon>
										<Image Classes="Icon" Source="{DynamicResource Image/Icon.Layout.Tile}"/>
									</MenuItem.Icon>
								</MenuItem>
								<Separator/>
								<MenuItem Header="Item" InputGesture="Ctrl+Z">
									<MenuItem.Icon>
										<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.OK}"/>
									</MenuItem.Icon>
								</MenuItem>
								<Separator/>
								<MenuItem Header="Item">
									<MenuItem.Icon>
										<Border Background="Red" Height="30" Width="20"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Item" IsEnabled="False">
									<MenuItem.Icon>
										<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.Update}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Item">
									<MenuItem Header="Sub Item"/>
									<MenuItem Header="Sub Item"/>
									<Separator/>
									<MenuItem Header="Sub Item"/>
									<MenuItem Header="Sub Item"/>
								</MenuItem>
								<MenuItem Header="Item"/>
							</ContextMenu>
						</StackPanel.ContextMenu>

						<Menu>

							<MenuItem Header="File">
								<MenuItem Header="Sub Item"/>
								<MenuItem Header="Sub Item"/>
								<Separator/>
								<MenuItem Header="Sub Item"/>
								<MenuItem Header="Sub Item"/>
							</MenuItem>

							<MenuItem Header="Edit">
								<MenuItem.Icon>
									<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.Edit}"/>
								</MenuItem.Icon>
							</MenuItem>

						</Menu>

						<Border Classes="ToolBar">
							<appControls:ToolBarScrollViewer Name="toolBarScrollViewer">
								<Grid Background="{x:Static Brushes.Transparent}" ColumnDefinitions="Auto,*,Auto">
									<StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">

										<Button Classes="ToolBar_Button" Command="{Binding $parent[Window].ShowAppInfoDialogCommand}">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.SidePanel}"/>
										</Button>
										<Button Classes="ToolBar_Button">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.Sliders}"/>
										</Button>
										<Button Classes="ToolBar_Button">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.AddFile}"/>
										</Button>
										<Button Classes="ToolBar_Button" IsEnabled="{Binding #toolBarToggleButton.IsChecked}">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.Error.Colored}"/>
										</Button>

										<Panel>
											<TextBox Classes="ToolBar_TextBox_WithInPlaceAction" Width="100"/>
											<ToggleButton Classes="TextBox_InPlaceAction">
												<Image Classes="Icon" Source="{DynamicResource Image/Icon.OpenFile}"/>
											</ToggleButton>
										</Panel>
										<TextBox Classes="ToolBar_TextBox" Width="50" IsEnabled="False"/>

										<ToggleButton Name="toolBarToggleButton" Classes="ToolBar_ToggleButton" ToolTip.Tip="This is tooltip">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.OK.Colored}"/>
										</ToggleButton>

										<RepeatButton Classes="ToolBar_RepeatButton" ToolTip.Tip="This is tooltip">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.Add}"/>
										</RepeatButton>

										<Separator Classes="ToolBar_Separator"/>

										<ToggleButton Classes="ToolBar_ToggleButton" IsEnabled="False">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.SaveAll}"/>
										</ToggleButton>

										<ComboBox Classes="ToolBar_ComboBox" Width="100">
											12345
										</ComboBox>
										<ComboBox Classes="ToolBar_ComboBox" Width="100" IsEnabled="False">
											6789
										</ComboBox>

										<RepeatButton Classes="ToolBar_RepeatButton">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.File}"/>
										</RepeatButton>

										<RepeatButton Classes="ToolBar_RepeatButton" IsEnabled="False">
											<Image Classes="Icon" Source="{StaticResource Image/Icon.Folder}"/>
										</RepeatButton>

										<TextBlock Classes="ToolBar_TextBlock" IsEnabled="False" Text="test:"/>

									</StackPanel>

									<Panel Grid.Column="1">
										<TextBox Name="toolBarTextBox" Classes="ToolBar_TextBox_WithInPlaceAction"/>
										<Button Classes="TextBox_InPlaceAction">
											<Image Classes="Icon" Source="{DynamicResource Image/Icon.Close}"/>
										</Button>
									</Panel>

									<StackPanel Grid.Column="2" HorizontalAlignment="Stretch" Orientation="Horizontal">
										<Button Classes="ToolBar_Button">
											<Panel Classes="Icon">
												<Image Classes="Icon" Source="{DynamicResource Image/Icon.More}"/>
												<Border Classes="ToolBar_NotificationIndicator" IsVisible="{Binding $parent[Window].Application.UpdateInfo, Converter={x:Static appConverters:ValueToBooleanConverters.NonNullToTrue}}">
													<Image Classes="ToolBar_NotificationIndicator" Source="{DynamicResource Image/Icon.Information.Colored}"/>
												</Border>
											</Panel>
										</Button>
									</StackPanel>
								</Grid>
							</appControls:ToolBarScrollViewer>
						</Border>

						<TextBlock Text="{DynamicResource String/ApplicationOptions.LogOutputTargetPort}" Margin="5,5,5,0"/>
						<NumericUpDown HorizontalAlignment="Left" Maximum="65535" Minimum="1" Value="{Binding $parent[Window].ApplicationOptions.LogOutputTargetPort, Mode=TwoWay}" Width="150"/>

						<Border Background="{DynamicResource Brush/WorkingArea.Panel.Background}" CornerRadius="5" HorizontalAlignment="Left" Margin="5" Padding="5">
							<StackPanel>
								<TextBlock Text="{Binding ID, StringFormat={}ID:{0}}" Margin="5,0,0,0"/>
								<TextBlock Text="{Binding $parent[Window].Application.ProcessInfo.CpuUsagePercentage, StringFormat={}CPU: {0:F2}%}" Margin="5,5,0,0"/>
								<TextBlock Text="{Binding $parent[Window].Application.ProcessInfo.PrivateMemoryUsage, Converter={x:Static appConverters:FileSizeConverter.Default}, StringFormat={}Memory Usage: {0}}" Margin="5,5,0,0"/>
								<TextBlock Text="{Binding $parent[Window].Application.EffectiveCustomScreenScaleFactor, StringFormat={}{0:F2}}" Margin="5,5,0,0"/>
								<NumericUpDown HorizontalAlignment="Left" Increment="0.1" Minimum="1.0" Maximum="2.0" Margin="5,5,0,0" Width="200" Value="{Binding $parent[Window].Application.CustomScreenScaleFactor, Mode=TwoWay}" FormatString="F2"/>
								<TextBlock Text="{Binding $parent[Window].ActualTransparencyLevel}" Margin="5,5,0,0"/>
								<TextBlock Text="{Binding $parent[Window].Application.IsDebugMode, StringFormat={}IsDebugMode: {0}}" Margin="5,5,0,0"/>
							</StackPanel>
						</Border>

						<appControls:RegexTextBox Name="regexTextBox" Height="60" HorizontalAlignment="Left" Margin="5" TextWrapping="Wrap" Width="200">
							<appControls:RegexTextBox.PredefinedGroups>
								<appControls:RegexGroup Name="Group1"/>
								<appControls:RegexGroup Name="Group2"/>
								<appControls:RegexGroup Name="Hello" DisplayName="{DynamicResource String/Common.OK}"/>
								<appControls:RegexGroup Name="World" DisplayName="{DynamicResource String/Common.Cancel}"/>
								<appControls:RegexGroup Name="Group3"/>
								<appControls:RegexGroup Name="Group4"/>
								<appControls:RegexGroup Name="Group5"/>
								<appControls:RegexGroup Name="Group6"/>
								<appControls:RegexGroup Name="Group7"/>
								<appControls:RegexGroup Name="Group8"/>
								<appControls:RegexGroup Name="Group9"/>
								<appControls:RegexGroup Name="Group10"/>
								<appControls:RegexGroup Name="Group11"/>
								<appControls:RegexGroup Name="Group12"/>
								<appControls:RegexGroup Name="Group13"/>
								<appControls:RegexGroup Name="Group14"/>
								<appControls:RegexGroup Name="Group15"/>
								<appControls:RegexGroup Name="Group16"/>
								<appControls:RegexGroup Name="Group17"/>
								<appControls:RegexGroup Name="Group18"/>
								<appControls:RegexGroup Name="Group19"/>
								<appControls:RegexGroup Name="Group20"/>
								<appControls:RegexGroup Name="Group21"/>
								<appControls:RegexGroup Name="Group22"/>
								<appControls:RegexGroup Name="Group23"/>
								<appControls:RegexGroup Name="Group24"/>
								<appControls:RegexGroup Name="Group25"/>
								<appControls:RegexGroup Name="Group26"/>
								<appControls:RegexGroup Name="Group27"/>
								<appControls:RegexGroup Name="Group28"/>
								<appControls:RegexGroup Name="Group29"/>
								<appControls:RegexGroup Name="Group30"/>
							</appControls:RegexTextBox.PredefinedGroups>
						</appControls:RegexTextBox>
						<appControls:RegexTextBox HorizontalAlignment="Left" Margin="5" Width="400"/>

						<appControls:StringInterpolationFormatTextBox Height="60" HorizontalAlignment="Left" Margin="5" TextWrapping="Wrap" Watermark="String interpolation" Width="200">
							<appControls:StringInterpolationFormatTextBox.PredefinedVariables>
								<appControls:StringInterpolationVariable Name="Var1"/>
								<appControls:StringInterpolationVariable Name="Var2"/>
								<appControls:StringInterpolationVariable Name="Hello" DisplayName="{DynamicResource String/Common.OK}"/>
								<appControls:StringInterpolationVariable Name="World" DisplayName="{DynamicResource String/Common.Cancel}"/>
							</appControls:StringInterpolationFormatTextBox.PredefinedVariables>
						</appControls:StringInterpolationFormatTextBox>
						<appControls:StringInterpolationFormatTextBox HorizontalAlignment="Left" Margin="5" Watermark="String interpolation" Width="400"/>

						<Border Background="{DynamicResource Brush/Accent}" CornerRadius="{DynamicResource ControlCornerRadius}" HorizontalAlignment="Left" Margin="5" Padding="10">
							<StackPanel Orientation="Horizontal">
								<Button Classes="InPlaceAction_Button">
									<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.File}"/>
								</Button>
								<Button Classes="InPlaceAction_Button">
									<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.OpenFile}"/>
								</Button>
								<Button Classes="InPlaceAction_Button">
									<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Save}"/>
								</Button>
								<Button Classes="InPlaceAction_Button" IsEnabled="False">
									<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.SaveAll}"/>
								</Button>
							</StackPanel>
						</Border>

						<StackPanel Orientation="Horizontal">
							<Expander HorizontalAlignment="Left" Header="Expander" Margin="5">
								<StackPanel>

									<appControls:DatePicker HorizontalAlignment="Left"/>
									<appControls:TimePicker HorizontalAlignment="Left"/>

									<Slider HorizontalAlignment="Left" Width="200"/>

								</StackPanel>
							</Expander>
							<Expander HorizontalAlignment="Left" IsExpanded="True" IsEnabled="False" Header="Expander" Margin="5">
								<StackPanel>

									<Slider HorizontalAlignment="Left" Width="200"/>

								</StackPanel>
							</Expander>
						</StackPanel>
						
						<StackPanel Orientation="Horizontal">
							<Button Content="Button" Margin="5"/>
							<Button Content="Button" IsEnabled="False" Margin="5"/>
							<Button Classes="accent" Content="Button" Margin="5"/>
							<Button Classes="accent" Content="Button" IsEnabled="False" Margin="5"/>
							<ToggleButton Content="ToggleButton" Margin="5"/>
							<ToggleButton Content="ToggleButton" IsEnabled="False" Margin="5"/>
							<ToggleButton Content="ToggleButton" IsChecked="True" IsEnabled="False" Margin="5"/>
							<RepeatButton Content="RepeatButton" Margin="5"/>
							<RepeatButton Content="RepeatButton" IsEnabled="False" Margin="5"/>
						</StackPanel>

						<StackPanel Orientation="Horizontal">
							<ToggleSwitch Margin="5"/>
							<ToggleSwitch IsEnabled="False" Margin="5"/>
							<ToggleSwitch IsChecked="True" IsEnabled="False" Margin="5"/>
						</StackPanel>

						<StackPanel Orientation="Horizontal">
							<Button Command="{Binding $parent[Window].ShowAppInfoDialog}" Content="Show App Info" Margin="5"/>
							<Button Command="{Binding $parent[Window].ShowTestDialog}" Content="Show Test Dialog" Margin="5"/>
							<Button Command="{Binding $parent[Window].Application.ShowMainWindow}" Content="Open New Window" Margin="5"/>
							<Button Command="{Binding $parent[Window].RestartApp}" Content="Restart App" Margin="5"/>
						</StackPanel>

						<Button Command="{Binding $parent[Window].Test}" Content="Test" Margin="5" ToolTip.Tip="{DynamicResource String/Common.Copy.WithGesture}"/>
						<Button Command="{Binding $parent[Window].Test2}" Content="Test2" Margin="5"/>

						<appControls:LinkTextBlock HorizontalAlignment="Left" IsEnabled="False" Margin="5" Text="Google" Uri="http://www.google.com/"/>
						<appControls:LinkTextBlock Command="{Binding $parent[Window].SwitchTheme}" HorizontalAlignment="Left" Margin="5" Text="Switch theme"/>

						<appControls:DateTimeTextBox Name="dateTimeTextBox" HorizontalAlignment="Left" Margin="5,5,0,0" Width="200"/>
						<TextBlock Margin="5,0,0,5" Text="{Binding #dateTimeTextBox.Value, StringFormat={}Value: {0}}"/>

						<appControls:IntegerTextBox Name="integerTextBox" HorizontalAlignment="Left" Margin="5,5,0,0" Width="200" Watermark="Integer"/>
						<TextBlock Text="{Binding #integerTextBox.Value, StringFormat={}Value: {0}}" HorizontalAlignment="Left" Margin="5,0,0,5"/>

						<appControls:EnumComboBox EnumType="{x:Type app:ThemeMode}" HorizontalAlignment="Left" Margin="5" Width="200"/>

						<TextBox Width="200" Margin="5" HorizontalAlignment="Left"/>

						<Border Width="30" Height="30" Margin="10" HorizontalAlignment="Left">
							<Image Classes="Icon" Source="{StaticResource Image/Icon.Folder}"/>
						</Border>

						<Border Width="30" Height="30" Margin="10" HorizontalAlignment="Left" IsEnabled="False">
							<Image Classes="Icon" Source="{StaticResource Image/Icon.Folder}"/>
						</Border>

						<ListBox HorizontalAlignment="Left" Width="200" Margin="5">
							<ListBoxItem>Item 1</ListBoxItem>
							<ListBoxItem>Item 2</ListBoxItem>
							<ListBoxItem>Item 3</ListBoxItem>
							<ListBoxItem>Item 4</ListBoxItem>
						</ListBox>

						<ComboBox HorizontalAlignment="Left" Width="200" Margin="5">
							1234567890123456789012345678901234567890
						</ComboBox>

						<appControls:IPAddressTextBox Name="ipAddressTextBox" HorizontalAlignment="Left" Margin="5,5,0,0" Width="200"/>
						<TextBlock Margin="5,0,0,5" Text="{Binding #ipAddressTextBox.IPAddress, StringFormat={}IPAddress: {0}}"/>

						<appControls:UriTextBox Name="uriTextBox" HorizontalAlignment="Left" Margin="5" Width="200"/>

						<Border Background="{DynamicResource Brush/WorkingArea.Panel.Background}" Height="50"/>

					</StackPanel>
				</ScrollViewer>

			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="12345"/>
				</TabItem.Header>
				<StackPanel>
					<Border Background="{DynamicResource Brush/ToolBar.Background}" Height="10"/>
				</StackPanel>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<TextBlock Text="Tab"/>
				</TabItem.Header>
			</TabItem>

			<TabItem Classes="Empty">
				<TabItem.Header>
					<Button Classes="AddTabItem">
						<Image Classes="Icon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</TabItem.Header>
			</TabItem>

		</appControls:TabControl>
		
	</DockPanel>

	
	
</Window>
